<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ProductionMapper.xml -->
<mapper namespace="com.cafein.mapper.ProductionMapper">

	
	<!-- AJAX 생산지시 목록 조회 -->
	<select id="getProduceListAJAX" resultType="com.cafein.domain.ProduceVO">
		select * from produce
		
		<where>
		
		<if test="startDate != null and endDate != null">
		 	producedate between #{startDate} and #{endDate}
		</if>
		
		<if test="process != null and !process.equals('')">
			AND process like concat('%',#{process},'%')
		</if>
		
		<if test="itemname != null and !itemname.equals('')">
			AND itemname = #{itemname}
		</if>
			
		<if test="searchBtn != null and searchBtn !='검사전'">
			AND state = #{searchBtn}
		</if>

		<if test="searchBtn != null and searchBtn=='검사전'">
			AND qualitycheck = #{searchBtn}
		</if>	
		
		</where>
		order by produceid desc limit #{cri.startPage}, #{cri.pageSize}
	</select>
	
	<!-- 엑셀파일 다운로드용 생산지시 리스트 조회 -->
	<select id="getExcelDownProduceList" resultType="com.cafein.domain.ProduceVO">
		select * from produce 
		<where>
		
		<if test="startDate != null and endDate != null">
		 	producedate between #{startDate} and #{endDate}
		</if>
		
		<if test="process != null and !process.equals('')">
			AND process like concat('%',#{process},'%')
		</if>
		
		<if test="itemname != null and !itemname.equals('')">
			AND itemname = #{itemname}
		</if>
			
		<if test="searchBtn != null and searchBtn !='검사전'">
			AND state = #{searchBtn}
		</if>

		<if test="searchBtn != null and searchBtn=='검사전'">
			AND qualitycheck = #{searchBtn}
		</if>	
		
		</where>
		order by produceid desc
	</select>

	
	<!-- AJAX 생산지시 전체글 개수 조회 -->
	<select id="AJAXcountProduceList" resultType="Integer">
		select count(*) from produce
		<where>
		<if test="startDate != null and endDate != null">
		 	producedate between #{startDate} and #{endDate}
		</if>
		
		<if test="searchBtn != null and searchBtn !='검사전'">
		AND state = #{searchBtn}
		</if>

		<if test="searchBtn != null and searchBtn=='검사전'">
		AND qualitycheck = #{searchBtn}
		</if>
		
		<if test="produceline != null and !produceline.equals(0)">
			AND produceline = #{produceline}
		</if>
		
		<if test="process != null and !process.equals('')">
			AND process like concat('%',#{process},'%')
		</if>
		
		<if test="itemname != null and !itemname.equals('')">
			AND itemname like concat('%',#{itemname},'%')
		</if>
		</where>
	</select>
	

	<!-- BOM  목록 조회 -->
	<select id="getBomList" resultType="com.cafein.domain.BomVO">
		SELECT bomid, b.itemcode, b.itemid as itemid, itemid1, itemid2, itemid3, temper, rate, roastedtime,
        i.itemname AS itemname, i1.itemname AS itemname1, i2.itemname AS itemname2, i3.itemname AS itemname3,
        s1.stockid AS stockid1, s2.stockid AS stockid2, s3.stockid AS stockid3
		FROM bom b
		JOIN item i ON b.itemcode = i.itemcode
		LEFT JOIN item i1 ON b.itemid1 = i1.itemid
		LEFT JOIN item i2 ON b.itemid2 = i2.itemid
		LEFT JOIN item i3 ON b.itemid3 = i3.itemid
		LEFT JOIN stock s1 ON b.itemid1 = s1.itemid
		LEFT JOIN stock s2 ON b.itemid2 = s2.itemid
		LEFT JOIN stock s3 ON b.itemid3 = s3.itemid
		WHERE i.available = 'Y'
 	</select>
	
	<!-- 생산지시 등록 -->
	<insert id="insertProducePlan">
		insert into produce (producedate, produceline, producetime, itemid, itemname, process, temper, itemid1, itemid2, itemid3, amount, membercode, packagevol) 
		values(#{producedate}, #{produceline}, #{producetime}, #{itemid}, #{itemname}, #{process}, #{temper}, #{itemid1}, #{itemid2}, #{itemid3}, #{amount}, #{membercode}, #{packagevol} )
	</insert>
	
	<!-- BOM 등록 -->
	<insert id="insertBom">
		insert into bom (itemcode, itemid, itemid1, itemid2, itemid3, temper, rate, roastedtime, membercode) 
		values(#{itemcode}, #{itemid}, #{itemid1}, #{itemid2}, #{itemid3}, #{temper}, #{rate}, #{roastedtime}, #{membercode})
	</insert>
	
	<!-- BOM 등록되지 않은 품목 조회 -->
	<select id="getNewItem" resultType="com.cafein.domain.ItemVO">
		SELECT * from item where not EXISTS (SELECT itemcode from bom where item.itemcode = bom.itemcode) and itemtype='완제품' and itemweight = 500
	</select>
	
	<!-- 품목 목록 조회 -->
	<select id="getItemList" resultType="com.cafein.domain.ItemVO">
		select * from item
	</select>
	
	<!-- 생산 상태 업데이트 -->
	<update id="updateProduceState">
		update produce set state = #{state} where produceid = #{produceid}
	</update>
	
	
	<!-- 생산지시 공정과정 업데이트 (블렌딩 -> 로스팅) -->
	<update id="updateProcessRoasting">
		update produce set process = #{process}, temper=#{temper} , qualitycheck='검사전', state='대기' where produceid = #{produceid}
	</update>
	
	<!-- 생산지시 공정과정 업데이트 (로스팅 -> 포장) -->
	<update id="updateProcess">
		update produce set process = #{process}, packagevol=#{packagevol}, qualitycheck='검사전', state='대기' where produceid = #{produceid}
	</update>
	
	<!-- 생산지시 블렌딩 공정과정 대기중인 작업 삭제(블렌딩, 대기, 검사전) -->
	<delete id="deleteProducePlan">
		delete from produce where produceid = #{produceid}
	</delete>
	
	<!-- 포장완료된 제품 roastedbean 테이블에 추가. -->
	<insert id="insertRoastedbean">
		insert into roastedbean(produceid, itemname, itemid, weight, lotnumber, roasteddate, note)
		values(#{produceid}, #{itemname}, #{itemid}, #{weight}, #{lotnumber}, #{roasteddate}, #{note})
	</insert>
	
	<!-- 생산지시리스트 아이템 id의 로스팅 온도값 찾기 로스팅공정으로 수정시 입력할 값-->
	<select id="getRoastingTemper" resultType="int">
		SELECT b.temper as temper FROM bom b
		JOIN produce p ON b.itemid = p.itemid
		where p.itemid = #{itemid} and produceid = #{produceid}
	</select>
	
	<!-- 로스팅 완제품 리스트 출력 -->
	<select id="getRoastedbeanList" resultType="com.cafein.domain.RoastedbeanVO">
		select * from roastedbean 
		
		<where>
			<if test="searchDate != null">
				roasteddate like concat ('%', #{searchDate},'%')
			</if>
			
			<if test="searchDate == null and searchLot != null and !searchLot.equals('')">
				and lotnumber like concat ('%',#{searchLot},'%')		
			</if>
		</where> 

		order by productid desc limit #{cri.startPage}, #{cri.pageSize}
	</select>
	
	<!-- 로스팅 목록 개수 전체글 개수 조회 -->
	<select id="countRoastedbean" resultType="Integer">
		select count(*) from roastedbean
		<where>
			<if test="searchDate != null">
				roasteddate like concat ('%', #{searchDate},'%')
			</if>
			
			<if test="searchDate == null and lotnumber != null and !lotnumber.equals('')">
				and lotnumber like concat ('%',#{lotnumber},'%')		
			</if>
		</where> 
	</select>
	
	<!-- 생산지시 블렌딩 작업들어갈때 품질(quality) 테이블 데이터 삽입 -->
	<insert id="regQualityList">
		insert into quality (itemtype, produceid, itemid, produceprocess, productquantity) 
		values ('생산', #{produceid}, #{itemid}, '블렌딩', #{productquantity})
	</insert>
	
	
	<!-- 생산공정 블렌딩 -> 로스팅으로 변경시 품질(quality)에 신규 데이터 삽입 -->
	<insert id="regRoastingQualityList">
		insert into quality (itemtype, produceid, itemid, produceprocess, productquantity) 
		values ('생산', #{produceid}, #{itemid}, '로스팅', #{productquantity})
	</insert>
	
	
	<!-- 생산공정 로스팅 -> 포장으로 변경시 품질(quality)에 신규 데이터 삽입 -->
	<insert id="regPackingQualityList">
		insert into quality (itemtype, produceid, itemid, produceprocess, productquantity) 
		values ('생산', #{produceid}, #{itemid}, '포장', #{productquantity})
	</insert>
	
	<!-- 블렌딩 대기 -> 생산중 변경시 재고 차감 -->
	
	<!-- 재고리스트 출력 -->
	<insert id="insertReleasesList">
		insert into releases(releasecode, membercode, itemid, stockid, releasequantity, releasedate )
		values (#{releasecode}, #{membercode}, #{itemid}, #{stockid}, #{releasequantity}, #{releasedate})
	</insert>
	
	
</mapper>