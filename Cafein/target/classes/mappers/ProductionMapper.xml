<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ProductionMapper.xml -->
<mapper namespace="com.cafein.mapper.ProductionMapper">

	
	<!-- AJAX 생산지시 목록 조회 -->
	<select id="getProduceListAJAX" resultType="com.cafein.domain.ProduceVO">
		
		select produceid, producecode, submitdate, producedate, produceline, producetime, p.itemid, p.itemname as itemname, 
		process, temper, p.itemid1 as itemid1, p.itemid2 as itemid2, p.itemid3 as itemid3, amount, membercode, qualitycheck, state, packagevol, 
		i1.stockid AS stockid1, i2.stockid AS stockid2, i3.stockid AS stockid3
		from produce p
		LEFT JOIN stock i1 ON p.itemid1 = i1.itemid
		LEFT JOIN stock i2 ON p.itemid2 = i2.itemid
		LEFT JOIN stock i3 ON p.itemid3 = i3.itemid
		
		<where>
		true
		<if test="startDate != null and endDate != null and !startDate.equals('') and !endDate.equals('')">
		 	AND producedate between #{startDate} and #{endDate}
		</if>
		
		<if test="process != null and !process.equals('')">
			AND process like concat('%',#{process},'%')
		</if>
		
		<if test="itemname != null and !itemname.equals('')">
		<![CDATA[
			AND p.itemname = #{itemname}
			]]>
		</if>
			
		<if test="searchBtn != null and searchBtn !='검사전' and searchBtn == '대기'">
			AND state = #{searchBtn}
		</if>
		
		<if test="searchBtn != null and searchBtn !='검사전' and searchBtn == '생산중'">
			AND state = #{searchBtn}
		</if>

		<if test="searchBtn != null and searchBtn=='검사전'">
			AND qualitycheck = #{searchBtn}
		</if>
		
		<if test="searchBtn != null and searchBtn=='오늘'">
			AND DATE(producedate) = CURDATE()
		</if>
			
		
		</where>
		order by produceid desc limit #{cri.startPage}, #{cri.pageSize}
		
	</select>
	
	<!-- 엑셀파일 다운로드용 생산지시 리스트 조회 -->
	<select id="getExcelDownProduceList" resultType="com.cafein.domain.ProduceVO">
		select produceid, producecode, submitdate, producedate, produceline, producetime, p.itemid, p.itemname as itemname, 
		process, temper, p.itemid1 as itemid1, p.itemid2 as itemid2, p.itemid3 as itemid3, amount, membercode, qualitycheck, state, packagevol, 
		i1.stockid AS stockid1, i2.stockid AS stockid2, i3.stockid AS stockid3
		from produce p
		LEFT JOIN stock i1 ON p.itemid1 = i1.itemid
		LEFT JOIN stock i2 ON p.itemid2 = i2.itemid
		LEFT JOIN stock i3 ON p.itemid3 = i3.itemid
		
		<where>
			true
		<if test="startDate != null and endDate != null and !startDate.equals('') and !endDate.equals('')">
		 	p.producedate between #{startDate} and #{endDate}
		</if>
		
		<if test="process != null and !process.equals('')">
			AND process like concat('%',#{process},'%')
		</if>
		
		<if test="itemname != null and !itemname.equals('')">
			AND p.itemname = #{itemname}
		</if>
			
		<if test="searchBtn != null and searchBtn !='검사전' and searchBtn == '대기'">
			AND state = #{searchBtn}
		</if>
		
		<if test="searchBtn != null and searchBtn !='검사전' and searchBtn == '생산중'">
			AND state = #{searchBtn}
		</if>

		<if test="searchBtn != null and searchBtn=='검사전'">
			AND qualitycheck = #{searchBtn}
		</if>
		
		<if test="searchBtn != null and searchBtn=='오늘'">
			AND DATE(producedate) = CURDATE()
		</if>	
		
		</where>
		order by produceid desc

	</select>
	<!-- AJAX 생산지시 전체글 개수 조회 -->
	<select id="AJAXcountProduceList" resultType="Integer">
		select count(*) from produce
		<where>
		<if test="startDate != null and endDate != null and !startDate.equals('') and !endDate.equals('')">
		 AND producedate between #{startDate} and #{endDate}
		</if>
		
		<if test="searchBtn != null and searchBtn !='검사전' and searchBtn == '대기'">
			AND state = #{searchBtn}
		</if>
		
		<if test="searchBtn != null and searchBtn !='검사전' and searchBtn == '생산중'">
			AND state = #{searchBtn}
		</if>

		<if test="searchBtn != null and searchBtn=='검사전'">
			AND qualitycheck = #{searchBtn}
		</if>
		
		<if test="searchBtn != null and searchBtn=='오늘'">
			AND DATE(producedate) = CURDATE()
		</if>
		
		<if test="produceline != null and !produceline.equals(0)">
			AND produceline = #{produceline}
		</if>
		
		<if test="process != null and !process.equals('')">
			AND process like concat('%',#{process},'%')
		</if>
		
		<if test="itemname != null and !itemname.equals('')">
			AND itemname like concat('%',#{itemname},'%')
		</if>
		
		</where>
	</select>
	

	<!-- BOM  목록 조회 -->
	<select id="getBomList" resultType="com.cafein.domain.BomVO">
		SELECT bomid, b.itemcode, b.itemid as itemid, itemid1, itemid2, itemid3, temper, rate, roastedtime,
        i.itemname AS itemname, i1.itemname AS itemname1, i2.itemname AS itemname2, i3.itemname AS itemname3,
        s1.stockid AS stockid1, s2.stockid AS stockid2, s3.stockid AS stockid3
		FROM bom b
		JOIN item i ON b.itemcode = i.itemcode
		LEFT JOIN item i1 ON b.itemid1 = i1.itemid
		LEFT JOIN item i2 ON b.itemid2 = i2.itemid
		LEFT JOIN item i3 ON b.itemid3 = i3.itemid
		LEFT JOIN stock s1 ON b.itemid1 = s1.itemid
		LEFT JOIN stock s2 ON b.itemid2 = s2.itemid
		LEFT JOIN stock s3 ON b.itemid3 = s3.itemid
		WHERE i.available = 'Y'
 	</select>
	
	<!-- 생산지시 등록 -->
	<insert id="insertProducePlan">
		insert into produce (producedate, produceline, producetime, itemid, itemname, process, temper, itemid1, itemid2, itemid3, amount, membercode, packagevol, producecode) 
		values(#{producedate}, #{produceline}, #{producetime}, #{itemid}, #{itemname}, #{process}, #{temper}, #{itemid1}, #{itemid2}, #{itemid3}, #{amount}, #{membercode}, #{packagevol}, #{producecode} )
	</insert>
	
	<!-- BOM 등록 -->
	<insert id="insertBom">
		insert into bom (itemcode, itemid, itemid1, itemid2, itemid3, temper, rate, roastedtime, membercode) 
		values(#{itemcode}, #{itemid}, #{itemid1}, #{itemid2}, #{itemid3}, #{temper}, #{rate}, #{roastedtime}, #{membercode})
	</insert>
	
	<!-- BOM 등록되지 않은 품목 조회 -->
	<select id="getNewItem" resultType="com.cafein.domain.ItemVO">
		SELECT * from item where not EXISTS (SELECT itemcode from bom where item.itemcode = bom.itemcode) and itemtype='완제품' and itemweight = 500
	</select>
	
	<!-- 품목 목록 조회 -->
	<select id="getItemList" resultType="com.cafein.domain.ItemVO">
		select * from item
	</select>
	
	<!-- 생산 상태 업데이트 -->
	<update id="updateProduceState">
		update produce set state = #{state} where produceid = #{produceid}
	</update>
	
	
	<!-- 생산지시 공정과정 업데이트 (블렌딩 -> 로스팅) -->
	<update id="updateProcessRoasting">
		update produce set process = #{process}, temper=#{temper} , qualitycheck='검사전', state='대기' where produceid = #{produceid}
	</update>
	
	<!-- 생산지시 공정과정 업데이트 (로스팅 -> 포장) -->
	<update id="updateProcess">
		update produce set process = #{process}, packagevol=#{packagevol}, qualitycheck='검사전', state='대기' where produceid = #{produceid}
	</update>
	
	<!-- 생산지시 블렌딩 공정과정 대기중인 작업 삭제(블렌딩, 대기, 검사전) -->
	<delete id="deleteProducePlan">
		delete from produce where produceid = #{produceid}
	</delete>
	
	<!-- 포장완료된 제품 roastedbean 테이블에 추가. -->
	<insert id="insertRoastedbean">
		insert into roastedbean(produceid, itemname, itemid, weight, lotnumber, roasteddate, note)
		values(#{produceid}, #{itemname}, #{itemid}, #{weight}, #{lotnumber}, #{roasteddate}, #{note})
	</insert>
	
	<!-- 생산지시리스트 아이템 id의 로스팅 온도값 찾기 로스팅공정으로 수정시 입력할 값-->
	<select id="getRoastingTemper" resultType="int">
		SELECT b.temper as temper FROM bom b
		JOIN produce p ON b.itemid = p.itemid
		where p.itemid = #{itemid} and produceid = #{produceid}
	</select>
	
	<!-- 로스팅 완제품 리스트 출력 -->
	<select id="getRoastedbeanList" resultType="com.cafein.domain.RoastedbeanVO">	
		select * from roastedbean 
		<where>
			true
			<if test="searchLot != null and !searchLot.equals('')">
				<![CDATA[
				and lotnumber like concat ('%',#{searchLot},'%')	
				]]>	
			</if>
			
			<if test="searchDate != null and !searchDate.equals('')">
				<![CDATA[
				and roasteddate like concat ('%',#{searchDate},'%')
				]]>
			</if>
			
		</where> 

		order by productid desc limit #{cri.startPage}, #{cri.pageSize}

	
	</select>
	<!-- 로스팅 목록 개수 전체글 개수 조회 -->
	<select id="countRoastedbean" resultType="Integer">
		select count(*) from roastedbean
		<where>
		 	true
			<if test="searchLot != null and !searchLot.equals('')">
				<![CDATA[
				and lotnumber like concat ('%',#{searchLot},'%')	
				]]>	
			</if>			
			<if test="searchDate != null and !searchDate.equals('')">
				<![CDATA[
				and roasteddate like concat ('%',#{searchDate},'%')
				]]>
			</if>			
		</where> 
	</select>
	
	<!-- 생산지시 블렌딩 작업들어갈때 품질(quality) 테이블 데이터 삽입 -->
	<insert id="regQualityList">
		insert into quality (itemtype, produceid, itemid, produceprocess, productquantity) 
		values ('생산', #{produceid}, #{itemid}, '블렌딩', #{productquantity})
	</insert>
	
	
	<!-- 생산공정 블렌딩 -> 로스팅으로 변경시 품질(quality)에 신규 데이터 삽입 -->
	<insert id="regRoastingQualityList">
		insert into quality (itemtype, produceid, itemid, produceprocess, productquantity) 
		values ('생산', #{produceid}, #{itemid}, '로스팅', #{productquantity})
	</insert>
	
	
	<!-- 생산공정 로스팅 -> 포장으로 변경시 품질(quality)에 신규 데이터 삽입 -->
	<insert id="regPackingQualityList">
		insert into quality (itemtype, produceid, itemid, produceprocess, productquantity) 
		values ('생산', #{produceid}, #{itemid}, '포장', #{productquantity})
	</insert>
	
	
	<!-- 출고리스트 삽입 -->
	<insert id="insertReleasesList">
		insert into releases(releasecode, membercode, itemid, stockid, releasequantity, releasedate, producecode )
		values (#{releasecode}, #{membercode}, #{itemid}, #{stockid}, #{releasequantity}, #{releasedate}, #{producecode})
	</insert>
	
	<!-- 생산코드 개수 계산 -->
	<select id="getProducecodeCount" resultType="Integer">
		select count(*) from produce
		where producecode like concat('%', #{datePart}, '%')
	</select>	
	
	<!--  출고 리스트 대기에서 완료로 변경 -->
	<update id="updateCompletRelease">
		update releases set releasestate = '완료' where producecode=#{producecode}
	</update>
	
	<!-- 재고리스트 업데이트 -->
	<update id="updateStockList" >
		update stock
		set stockquantity = stockquantity - (select releasequantity
                            				 from releases
                            				 where stockid = #{stockid} and producecode=#{producecode})
		where stockid = #{stockid}

	</update>
	
	<!-- main페이지용 오늘의 생산량과 총 당해, 당월 생산량 구하는 함수들 -->
	<select id="getProduceAmountToday" resultType="Integer">
	<![CDATA[
		SELECT sum(amount) as todayAmount
		from produce
		where DATE(producedate) = CURDATE() and state = '완료'
	]]>
	</select>
	
	<!-- 당해 생산량 구하는 쿼리 -->
	<select id="getProduceAmountThisYear" resultType="Integer">
	<![CDATA[
		SELECT SUM(amount) AS thisYearAmount
		FROM produce
		WHERE YEAR(producedate) = YEAR(CURDATE()) and process = '포장' and state = '완료'
	]]>
	</select>
	
	<!-- 당월 생산량 구하는 쿼리 -->
	<select id="getProduceAmountThisMonth" resultType="Integer">
	<![CDATA[
		SELECT SUM(amount) AS thisMonthAmount
		FROM produce
		WHERE YEAR(producedate) = YEAR(CURDATE()) AND MONTH(producedate) = MONTH(CURDATE()) and process = '포장' and state = '완료'
	]]>
	</select>
	
	<!-- 금주 생산량 구하는 쿼리 -->
	<select id="getProduceAmountThisWeek" resultType="Integer">
		<![CDATA[
		 SELECT SUM(amount) AS thisWeekAmount
        FROM produce
        WHERE producedate >= CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-1 DAY
        AND producedate < CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-1 DAY + INTERVAL 1 WEEK
        AND process = '포장' and state = '완료'
        ]]>
	</select>
	
	
	<!-- 메인페이지용 생산지시 리스트 출력 -->
	<select id="getProduceList" resultType="com.cafein.domain.ProduceVO">
		select * from produce where DATE(producedate) = CURDATE()
		order by producetime
	</select>
	
</mapper>











